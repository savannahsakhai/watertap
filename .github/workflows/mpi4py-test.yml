# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MPI tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  # NOTE: the value of `group` should be chosen carefully,
  # otherwise we might end up over- or under-canceling workflow runs
  # github.head_ref is only defined for pull request events
  # so, if it's not present (i.e. event was triggered by push)
  # we use github.ref instead
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  # --color=yes needed for colorized output to be shown in GHA logs
  # --pyargs watertap is needed to be able to define CLI options in watertap/conftest.py
  PYTEST_ADDOPTS: "--color=yes"
  PIP_PROGRESS_BAR: "off"

jobs:
  build:

    runs-on: ${{ matrix.os-version }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        os:
          - linux
          - win64
          # - macos
        include:
          - os: linux
            os-version: ubuntu-22.04
          - os: win64
            os-version: windows-2022
          # - os: macos
          #   os-version: macos-10.15

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        conda install --quiet --yes mpi4py
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        idaes get-extensions --verbose
    - name: Conda info
      run: conda info
    - name: Test parallel pytest w/ MPI
      run: |
        mpiexec -n 2 coverage run --parallel-mode -m mpi4py -m pytest watertap/tools/parameter_sweep/tests/test*parameter_sweep.py watertap/tools/analysis_tools/loop_tool/tests/test*loop_tool.py --no-cov
        # single report
        coverage combine
        # convert to XML
        coverage xml
    - name: Upload coverage report as job artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.os }}
        path: coverage.xml
        if-no-files-found: error

  upload-coverage:
    name: Upload coverage report (Codecov)
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # the checkout step is needed to have access to codecov.yml
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-report-*
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          verbose: true
          # NOTE: secrets are not available for pull_request workflows
          # However, as of 2024-02-10, Codecov is still allowing tokenless upload from PRs
          # but does require token for other workflows e.g. merge to `main`
          # see https://github.com/codecov/codecov-action/issues/1274#issuecomment-1934437359
          token: ${{ secrets.CODECOV_TOKEN }}